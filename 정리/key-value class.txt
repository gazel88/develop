KEY-VALUE 형태의 자료구조 

1.Dictionary

	O(1)의 시간 복잡도를 갖고있어, 원소의 수와 상간없이 빠르게 데이터를 검색하고 가져온다.
	키는 중복 허용 안됌
	메모리 사용량이 LIST에 비해서 큰편.
	데이터의 순서를 보장하지 않음
	키값으로 검색해서 사용할때 사용

2.List<KeyValuePair<Tkey,TValue>>
	
	순서대로 저장 인덱스 사용시에 사용
	키의 정렬 없이 간단히 사용가능

3.HashTable

	다양한 데이터 저장 가능 및 검색 속도가 빠름
	데이터의 순서는 보장하지 않음
	해시 충돌이 발생 가능
	데이터가 삭제되면 빈 공가이 남음
	중복 키 불가
	키, 값 자료형을 정의안하고 사용할 수 있다.
4.HashSet

	중복을 허용하지 않음
	집합 연산에 사용
	데이터 순서 보장하지 않음
	검색이 제한적
	
5.SortedDictionary
	
	정렬된 데이터 필요시 사용
	key값을 기준으로 정렬
	정렬을 유지하기 위해 메모리 사용량이 큼